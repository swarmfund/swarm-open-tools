{
  "_args": [
    [
      "make-iterator@https://registry.npmjs.org/make-iterator/-/make-iterator-1.0.1.tgz",
      "/home/dominik/blockchain/DocProof/node_modules/ganache-core"
    ]
  ],
  "_from": "make-iterator@https://registry.npmjs.org/make-iterator/-/make-iterator-1.0.1.tgz",
  "_id": "make-iterator@1.0.1",
  "_inCache": true,
  "_location": "/ganache-core/make-iterator",
  "_phantomChildren": {},
  "_requested": {
    "name": "make-iterator",
    "raw": "make-iterator@https://registry.npmjs.org/make-iterator/-/make-iterator-1.0.1.tgz",
    "rawSpec": "https://registry.npmjs.org/make-iterator/-/make-iterator-1.0.1.tgz",
    "scope": null,
    "spec": "https://registry.npmjs.org/make-iterator/-/make-iterator-1.0.1.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/ganache-core/arr-filter",
    "/ganache-core/arr-map",
    "/ganache-core/collection-map",
    "/ganache-core/object.map",
    "/ganache-core/object.reduce"
  ],
  "_resolved": "https://registry.npmjs.org/make-iterator/-/make-iterator-1.0.1.tgz",
  "_shasum": "29b33f312aa8f547c4a5e490f56afcec99133ad6",
  "_shrinkwrap": null,
  "_spec": "make-iterator@https://registry.npmjs.org/make-iterator/-/make-iterator-1.0.1.tgz",
  "_where": "/home/dominik/blockchain/DocProof/node_modules/ganache-core",
  "author": {
    "name": "Jon Schlinkert",
    "url": "https://github.com/jonschlinkert"
  },
  "bugs": {
    "url": "https://github.com/jonschlinkert/make-iterator/issues"
  },
  "dependencies": {
    "kind-of": "^6.0.2"
  },
  "description": "Convert an argument into a valid iterator. Based on the `.makeIterator()` implementation in mout https://github.com/mout/mout.",
  "devDependencies": {
    "gulp-format-md": "^1.0.0",
    "mocha": "^3.5.3"
  },
  "engines": {
    "node": ">=0.10.0"
  },
  "files": [
    "index.js"
  ],
  "homepage": "https://github.com/jonschlinkert/make-iterator",
  "keywords": [
    "arr",
    "array",
    "contains",
    "for-own",
    "forOwn",
    "forown",
    "function",
    "iterate",
    "iterator",
    "make"
  ],
  "license": "MIT",
  "main": "index.js",
  "name": "make-iterator",
  "optionalDependencies": {},
  "readme": "# make-iterator [![NPM version](https://img.shields.io/npm/v/make-iterator.svg?style=flat)](https://www.npmjs.com/package/make-iterator) [![NPM monthly downloads](https://img.shields.io/npm/dm/make-iterator.svg?style=flat)](https://npmjs.org/package/make-iterator) [![NPM total downloads](https://img.shields.io/npm/dt/make-iterator.svg?style=flat)](https://npmjs.org/package/make-iterator) [![Linux Build Status](https://img.shields.io/travis/jonschlinkert/make-iterator.svg?style=flat&label=Travis)](https://travis-ci.org/jonschlinkert/make-iterator)\n\n> Convert an argument into a valid iterator. Based on the `.makeIterator()` implementation in mout https://github.com/mout/mout.\n\nPlease consider following this project's author, [Jon Schlinkert](https://github.com/jonschlinkert), and consider starring the project to show your :heart: and support.\n\n## Install\n\nInstall with [npm](https://www.npmjs.com/):\n\n```sh\n$ npm install --save make-iterator\n```\n\nCopyright (c) 2012, 2013 moutjs team and contributors (http://moutjs.com)\n\n## Usage\n\n```js\nvar iterator = require('make-iterator');\n```\n\n**Regex**\n\n```js\nvar arr = ['a', 'b', 'c', 'd', 'e', 'f'];\nvar fn = iterator(/[a-c]/);\nconsole.log(arr.filter(fn));\n//=> ['a', 'b', 'c'];\n```\n\n**Objects**\n\n```js\nvar fn =  iterator({ a: 1, b: { c: 2 } });\n\nconsole.log(fn({ a: 1, b: { c: 2, d: 3 } }));\n//=> true\nconsole.log(fn({ a: 1, b: { c: 3 } }));\n//=> false\n```\n\n## About\n\n<details>\n<summary><strong>Contributing</strong></summary>\n\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](../../issues/new).\n\n</details>\n\n<details>\n<summary><strong>Running Tests</strong></summary>\n\nRunning and reviewing unit tests is a great way to get familiarized with a library and its API. You can install dependencies and run tests with the following command:\n\n```sh\n$ npm install && npm test\n```\n\n</details>\n\n<details>\n<summary><strong>Building docs</strong></summary>\n\n_(This project's readme.md is generated by [verb](https://github.com/verbose/verb-generate-readme), please don't edit the readme directly. Any changes to the readme must be made in the [.verb.md](.verb.md) readme template.)_\n\nTo generate the readme, run the following command:\n\n```sh\n$ npm install -g verbose/verb#dev verb-generate-readme && verb\n```\n\n</details>\n\n### Related projects\n\nYou might also be interested in these projects:\n\n* [any](https://www.npmjs.com/package/any): Returns `true` if a value exists in the given string, array or object. | [homepage](https://github.com/jonschlinkert/any \"Returns `true` if a value exists in the given string, array or object.\")\n* [arr-filter](https://www.npmjs.com/package/arr-filter): Faster alternative to javascript's native filter method. | [homepage](https://github.com/jonschlinkert/arr-filter \"Faster alternative to javascript's native filter method.\")\n* [arr-map](https://www.npmjs.com/package/arr-map): Faster, node.js focused alternative to JavaScript's native array map. | [homepage](https://github.com/jonschlinkert/arr-map \"Faster, node.js focused alternative to JavaScript's native array map.\")\n* [array-every](https://www.npmjs.com/package/array-every): Returns true if the callback returns truthy for all elements in the given array. | [homepage](https://github.com/jonschlinkert/array-every \"Returns true if the callback returns truthy for all elements in the given array.\")\n* [collection-map](https://www.npmjs.com/package/collection-map): Returns an array of mapped values from an array or object. | [homepage](https://github.com/jonschlinkert/collection-map \"Returns an array of mapped values from an array or object.\")\n* [utils](https://www.npmjs.com/package/utils): Fast, generic JavaScript/node.js utility functions. | [homepage](https://github.com/jonschlinkert/utils \"Fast, generic JavaScript/node.js utility functions.\")\n\n### Author\n\n**Jon Schlinkert**\n\n* [LinkedIn Profile](https://linkedin.com/in/jonschlinkert)\n* [GitHub Profile](https://github.com/jonschlinkert)\n* [Twitter Profile](https://twitter.com/jonschlinkert)\n\n### License\n\nCopyright Â© 2018, [Jon Schlinkert](https://github.com/jonschlinkert).\nReleased under the [MIT License](LICENSE).\n\n***\n\n_This file was generated by [verb-generate-readme](https://github.com/verbose/verb-generate-readme), v0.6.0, on April 08, 2018._",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/jonschlinkert/make-iterator.git"
  },
  "scripts": {
    "test": "mocha"
  },
  "verb": {
    "layout": "default",
    "lint": {
      "reflinks": true
    },
    "plugins": [
      "gulp-format-md"
    ],
    "reflinks": [
      "verb",
      "verb-readme-generator"
    ],
    "related": {
      "list": [
        "any",
        "arr-filter",
        "arr-map",
        "array-every",
        "collection-map",
        "utils"
      ]
    },
    "tasks": [
      "readme"
    ],
    "toc": false
  },
  "version": "1.0.1"
}
