{
  "_args": [
    [
      "level-sublevel@https://registry.npmjs.org/level-sublevel/-/level-sublevel-6.6.4.tgz",
      "/home/dominik/blockchain/DocProof/node_modules/ganache-core"
    ]
  ],
  "_from": "level-sublevel@https://registry.npmjs.org/level-sublevel/-/level-sublevel-6.6.4.tgz",
  "_id": "level-sublevel@6.6.4",
  "_inCache": true,
  "_location": "/ganache-core/level-sublevel",
  "_phantomChildren": {
    "inherits": "2.0.4",
    "readable-stream": "2.3.7",
    "xtend": "4.0.2"
  },
  "_requested": {
    "name": "level-sublevel",
    "raw": "level-sublevel@https://registry.npmjs.org/level-sublevel/-/level-sublevel-6.6.4.tgz",
    "rawSpec": "https://registry.npmjs.org/level-sublevel/-/level-sublevel-6.6.4.tgz",
    "scope": null,
    "spec": "https://registry.npmjs.org/level-sublevel/-/level-sublevel-6.6.4.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/ganache-core"
  ],
  "_resolved": "https://registry.npmjs.org/level-sublevel/-/level-sublevel-6.6.4.tgz",
  "_shasum": "f7844ae893919cd9d69ae19d7159499afd5352ba",
  "_shrinkwrap": null,
  "_spec": "level-sublevel@https://registry.npmjs.org/level-sublevel/-/level-sublevel-6.6.4.tgz",
  "_where": "/home/dominik/blockchain/DocProof/node_modules/ganache-core",
  "author": {
    "email": "dominic.tarr@gmail.com",
    "name": "Dominic Tarr",
    "url": "http://dominictarr.com"
  },
  "bugs": {
    "url": "https://github.com/dominictarr/level-sublevel/issues"
  },
  "dependencies": {
    "bytewise": "~1.1.0",
    "level-codec": "^9.0.0",
    "level-errors": "^2.0.0",
    "level-iterator-stream": "^2.0.3",
    "ltgt": "~2.1.1",
    "pull-defer": "^0.2.2",
    "pull-level": "^2.0.3",
    "pull-stream": "^3.6.8",
    "typewiselite": "~1.0.0",
    "xtend": "~4.0.0"
  },
  "description": "partition levelup databases",
  "devDependencies": {
    "level": "^3.0.1",
    "level-test": "^3.0.0",
    "monotonic-timestamp": "0.0.8",
    "rimraf": "~2.1.4",
    "shasum": "0.0.2",
    "stream-to-pull-stream": "~1.2.0",
    "tape": "^4.9.1",
    "through": "~2.3.4"
  },
  "homepage": "https://github.com/dominictarr/level-sublevel",
  "license": "MIT",
  "name": "level-sublevel",
  "optionalDependencies": {},
  "readme": "# level-sublevel\n\nSeparate sections of levelup, with hooks!\n\n[![build status](https://secure.travis-ci.org/dominictarr/level-sublevel.png)](http://travis-ci.org/dominictarr/level-sublevel)\n\n[![testling badge](https://ci.testling.com/dominictarr/level-sublevel.png)](https://ci.testling.com/dominictarr/level-sublevel)\n\nThis module allows you to create separate sections of a\n[levelup](https://github.com/rvagg/node-levelup) database,\nkinda like tables in an sql database, but evented, and ranged,\nfor real-time changing data.\n\n## level-sublevel@6 **BREAKING CHANGES**\n\nThe long awaited `level-sublevel` rewrite is out!\nYou are hereby warned this is a _significant breaking_ change.\nSo it's good to use it with a new project,\nThe user api is _mostly_ the same as before,\nbut the way that keys are _encoded_ has changed, and _this means\nyou cannot run 6 on a database you created with 5_.\n\nAlso, `createWriteStream` has been removed, in anticipation of [this\nchange](https://github.com/rvagg/node-levelup/pull/207) use something\nlike [level-write-stream](https://github.com/Raynos/level-write-stream)\n\n### Legacy Mode\n\nUsing leveldb with legacy mode is the simplest way to get the new sublevel\non top of a database that used old sublevel. Simply require sublevel like this:\n\n``` js\nvar level = require('level')\n                                   //  V *** require legacy.js ***\nvar sublevel = require('level-sublevel/legacy')\nvar db = sublevel(level(path))\n\n```\n\n### Migration Tool\n\n@calvinmetcalf has created a migration tool:\n[sublevel-migrate](https://github.com/calvinmetcalf/sublevel-migrate)\n\nThis can be used to copy an old level-sublevel into the new format.\n\n## Stability\n\nUnstable: Expect patches and features, possible api changes.\n\nThis module is working well, but may change in the future as its use is further explored.\n\n## Example\n\n``` js\nvar LevelUp = require('levelup')\nvar Sublevel = require('level-sublevel')\n\nvar db = Sublevel(LevelUp('/tmp/sublevel-example'))\nvar sub = db.sublevel('stuff')\n\n//put a key into the main levelup\ndb.put(key, value, function () {})\n\n//put a key into the sub-section!\nsub.put(key2, value, function () {})\n```\n\nSublevel prefixes each subsection so that it will not collide\nwith the outer db when saving or reading!\n\n## Hooks\n\nHooks are specially built into Sublevel so that you can \ndo all sorts of clever stuff, like generating views or\nlogs when records are inserted!\n\nRecords added via hooks will be atomically inserted with the triggering change.\n\n### Hooks Example\n\nWhenever a record is inserted,\nsave an index to it by the time it was inserted.\n\n``` js\nvar sub = db.sublevel('SEQ')\n\ndb.pre(function (ch, add) {\n  add({\n    key: ''+Date.now(), \n    value: ch.key, \n    type: 'put',\n    // NOTE: pass the destination db to add the value to that subsection!\n    prefix: sub\n  })\n})\n\ndb.put('key', 'VALUE', function (err) {\n  // read all the records inserted by the hook!\n  sub.createReadStream().on('data', console.log)\n})\n```\n\nNotice that the `prefix` property to `add()` is set to `sub`, which tells the hook to save the new record in the `sub` section.\n\n## Batches\n\nIn `sublevel` batches also support a `prefix: subdb` property,\nif set, this row will be inserted into that database section,\ninstead of the current section, similar to the `pre` hook above.\n\n``` js\nvar sub1 = db.sublevel('SUB_1')\nvar sub2 = db.sublevel('SUM_2')\n\nsub.batch([\n  {key: 'key', value: 'Value', type: 'put'},\n  {key: 'key', value: 'Value', type: 'put', prefix: sub2},\n], function (err) {...})\n```\n\n## License\n\nMIT\n\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/dominictarr/level-sublevel.git"
  },
  "scripts": {
    "test": "node test-runner.js"
  },
  "stability": "unstable",
  "testling": {
    "browsers": [
      "android-browser/4.2..latest",
      "chrome/22..latest",
      "chrome/canary",
      "firefox/17..latest",
      "firefox/nightly",
      "ie/8..latest",
      "ipad/6.0..latest",
      "iphone/6.0..latest",
      "opera/12..latest",
      "opera/next",
      "safari/5.1..latest"
    ],
    "files": "test/*.js"
  },
  "version": "6.6.4"
}
