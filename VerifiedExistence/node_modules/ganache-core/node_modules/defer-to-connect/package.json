{
  "_args": [
    [
      "defer-to-connect@https://registry.npmjs.org/defer-to-connect/-/defer-to-connect-1.1.3.tgz",
      "/home/dominik/blockchain/DocProof/node_modules/ganache-core"
    ]
  ],
  "_from": "defer-to-connect@https://registry.npmjs.org/defer-to-connect/-/defer-to-connect-1.1.3.tgz",
  "_id": "defer-to-connect@1.1.3",
  "_inCache": true,
  "_location": "/ganache-core/defer-to-connect",
  "_phantomChildren": {},
  "_requested": {
    "name": "defer-to-connect",
    "raw": "defer-to-connect@https://registry.npmjs.org/defer-to-connect/-/defer-to-connect-1.1.3.tgz",
    "rawSpec": "https://registry.npmjs.org/defer-to-connect/-/defer-to-connect-1.1.3.tgz",
    "scope": null,
    "spec": "https://registry.npmjs.org/defer-to-connect/-/defer-to-connect-1.1.3.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/ganache-core/@szmarczak/http-timer"
  ],
  "_resolved": "https://registry.npmjs.org/defer-to-connect/-/defer-to-connect-1.1.3.tgz",
  "_shasum": "331ae050c08dcf789f8c83a7b81f0ed94f4ac591",
  "_shrinkwrap": null,
  "_spec": "defer-to-connect@https://registry.npmjs.org/defer-to-connect/-/defer-to-connect-1.1.3.tgz",
  "_where": "/home/dominik/blockchain/DocProof/node_modules/ganache-core",
  "author": {
    "name": "Szymon Marczak"
  },
  "ava": {
    "babel": false,
    "compileEnhancements": false,
    "extensions": [
      "ts"
    ],
    "files": [
      "!dist/tests/test.d.ts"
    ],
    "require": [
      "ts-node/register"
    ]
  },
  "bugs": {
    "url": "https://github.com/szmarczak/defer-to-connect/issues"
  },
  "dependencies": {},
  "description": "The safe way to handle the `connect` socket event",
  "devDependencies": {
    "@sindresorhus/tsconfig": "^0.5.0",
    "@types/node": "^12.12.4",
    "@typescript-eslint/eslint-plugin": "^1.11.0",
    "@typescript-eslint/parser": "^1.11.0",
    "ava": "^2.1.0",
    "coveralls": "^3.0.7",
    "create-cert": "^1.0.6",
    "del-cli": "^3.0.0",
    "eslint-config-xo-typescript": "^0.15.0",
    "nyc": "^14.0.0",
    "p-event": "^4.1.0",
    "ts-node": "^8.1.0",
    "typescript": "^3.6.4",
    "xo": "^0.25.3"
  },
  "files": [
    "dist"
  ],
  "homepage": "https://github.com/szmarczak/defer-to-connect#readme",
  "keywords": [
    "connect",
    "event",
    "socket"
  ],
  "license": "MIT",
  "main": "dist",
  "name": "defer-to-connect",
  "nyc": {
    "extension": [
      ".ts"
    ]
  },
  "optionalDependencies": {},
  "readme": "# defer-to-connect\n\n> The safe way to handle the `connect` socket event\n\n[![Coverage Status](https://coveralls.io/repos/github/szmarczak/defer-to-connect/badge.svg?branch=master)](https://coveralls.io/github/szmarczak/defer-to-connect?branch=master)\n\nOnce you receive the socket, it may be already connected (or disconnected).<br>\nTo avoid checking that, use `defer-to-connect`. It'll do that for you.\n\n## Usage\n\n```js\nconst deferToConnect = require('defer-to-connect');\n\ndeferToConnect(socket, () => {\n    console.log('Connected!');\n});\n```\n\n## API\n\n### deferToConnect(socket, connectListener)\n\nCalls `connectListener()` when connected.\n\n### deferToConnect(socket, listeners)\n\n#### listeners\n\nAn object representing `connect`, `secureConnect` and `close` properties.\n\nCalls `connect()` when the socket is connected.<br>\nCalls `secureConnect()` when the socket is securely connected.<br>\nCalls `close()` when the socket is destroyed.\n\n## License\n\nMIT\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/szmarczak/defer-to-connect.git"
  },
  "scripts": {
    "build": "del-cli dist && tsc",
    "coveralls": "nyc report --reporter=text-lcov | coveralls",
    "prepublishOnly": "npm run build",
    "test": "xo && nyc ava"
  },
  "types": "dist",
  "version": "1.1.3",
  "xo": {
    "extends": "xo-typescript",
    "extensions": [
      "ts"
    ],
    "rules": {
      "ava/no-ignored-test-files": "off"
    }
  }
}
