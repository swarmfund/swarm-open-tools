{
  "_args": [
    [
      "ethashjs@https://registry.npmjs.org/ethashjs/-/ethashjs-0.0.7.tgz",
      "/home/dominik/blockchain/DocProof/node_modules/ganache-core"
    ]
  ],
  "_from": "ethashjs@https://registry.npmjs.org/ethashjs/-/ethashjs-0.0.7.tgz",
  "_id": "ethashjs@0.0.7",
  "_inCache": true,
  "_location": "/ganache-core/ethashjs",
  "_phantomChildren": {
    "bn.js": "4.11.8",
    "create-hash": "1.2.0",
    "keccakjs": "0.2.3",
    "rlp": "2.2.4",
    "secp256k1": "3.8.0"
  },
  "_requested": {
    "name": "ethashjs",
    "raw": "ethashjs@https://registry.npmjs.org/ethashjs/-/ethashjs-0.0.7.tgz",
    "rawSpec": "https://registry.npmjs.org/ethashjs/-/ethashjs-0.0.7.tgz",
    "scope": null,
    "spec": "https://registry.npmjs.org/ethashjs/-/ethashjs-0.0.7.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/ganache-core/ethereumjs-blockchain"
  ],
  "_resolved": "https://registry.npmjs.org/ethashjs/-/ethashjs-0.0.7.tgz",
  "_shasum": "30bfe4196726690a0c59d3b8272e70d4d0c34bae",
  "_shrinkwrap": null,
  "_spec": "ethashjs@https://registry.npmjs.org/ethashjs/-/ethashjs-0.0.7.tgz",
  "_where": "/home/dominik/blockchain/DocProof/node_modules/ganache-core",
  "author": {
    "email": "mjbecze@gmail.com",
    "name": "mjbecze"
  },
  "bugs": {
    "url": "https://github.com/ethereumjs/ethashjs/issues"
  },
  "dependencies": {
    "async": "^1.4.2",
    "buffer-xor": "^1.0.3",
    "ethereumjs-util": "^4.0.1",
    "miller-rabin": "^4.0.0"
  },
  "description": "an ethash implementation in JS",
  "devDependencies": {
    "ethereumjs-block": "^1.2.2",
    "ethereumjs-testing": "0.0.1",
    "levelup": "^1.3.0",
    "memdown": "^1.1.0",
    "tape": "^4.2.2"
  },
  "directories": {
    "test": "tests"
  },
  "homepage": "https://github.com/ethereumjs/ethashjs#readme",
  "keywords": [
    "POW",
    "ethash",
    "ethereum"
  ],
  "license": "MPL-2.0",
  "main": "index.js",
  "name": "ethashjs",
  "optionalDependencies": {},
  "readme": "# SYNOPSIS\n[![NPM Package](https://img.shields.io/npm/v/ethashjs.svg?style=flat-square)](https://www.npmjs.org/package/ethashjs)\n[![Build Status](https://travis-ci.org/ethereumjs/ethashjs.svg?branch=master&style=flat-square)](https://travis-ci.org/ethereumjs/ethashjs)\n[![Gitter](https://img.shields.io/gitter/room/ethereum/ethereumjs-lib.svg?style=flat-square)](https://gitter.im/ethereum/ethereumjs-lib) or #ethereumjs on freenode\n\nImplements [Ethash](https://github.com/ethereum/wiki/wiki/Ethash)\n\n# CONTACT\n [Scrollback](https://scrollback.io/ethereumjs/all/all-messages) or #ethereumjs on freenode\n\n# INSTALL\n`npm install ethashjs`\n\n# USAGE\n```javascript\nconst Ethash = require('ethashjs')\nconst Block = require('ethereumjs-block')\nconst levelup = require('levelup')\nconst memdown = require('memdown')\n\nvar cacheDB = levelup('', {\n  db: memdown\n})\n\nvar ethash = new Ethash(cacheDB);\nvar validblockRlp = \"f90667f905fba0a8d5b7a4793baaede98b5236954f634a0051842df6a252f6a80492fd888678bda01dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347948888f1f195afa192cfee860698584c030f4c9db1a0f93c8db1e931daa2e22e39b5d2da6fb4074e3d544094857608536155e3521bc1a0bb7495628f9160ddbcf6354380ee32c300d594e833caec3a428041a66e7bade1a0c7778a7376099ee2e5c455791c1885b5c361b95713fddcbe32d97fd01334d296bfefd882560b84559c17b9ba09c7b47112a3afb385c12924bf6280d273c106eea7caeaf5131d8776f61056c148876ae05d46b58d1fff866f864800a82c35094095e7baea6a6c7c4c2dfeb977efac326af552d8785012a05f200801ba01d2c92cfaeb04e53acdff2b5d42005ff6aacdb0105e64eb8c30c273f445d2782a01e7d50ffce57840360c57d94977b8cdebde614da23e8d1e77dc07928763cfe21c0\"\n\nvar validblock = new Block(new Buffer(validblockRlp, 'hex'))\n\nethash.verifyPOW(validblock, function (result) {\n  console.log(result)\n})\n```\n\n# BROWSER  \nYep, You can [browserify](http://browserify.org/) it.\n\n# API\n- [`new Ethash([cacheDB])`](#newethashcachedb)\n- [`ethash.verifyPOW(block, cb)`](#ethashverifypowblock-cb)\n- [`ethash.mkcache(cacheSize, seed)`](#ethashmkcachecachesize-seed)\n- [`ethash.run(val, nonce, fullsize)`](#ethashrunval-nonce-fullsize)\n\n### `new Ethash([cacheDB])`\nCreates a new instance of `Ethash`.\n\n**Parameters**\n- `cacheDB` - an instance of a levelup db which is used to store the cache(s)\n\n### `ethash.verifyPOW(block, cb)`\nVerifies the POW on a block and its uncles\n\n**Parameters**  \n- `block` - the [block](https://github.com/ethereum/ethereumjs-block) to verify\n- `cb` - the callback which is given a `Boolean` determining the validaty of the block \n\n### `ethash.mkcache(cacheSize, seed)`\nCreates a cache. NOTE: this is automatically done for in  - [`ethash.verifyPOW(block, cb)`](#ethashverifypowblock-cb) so you do not need to use this function if you are just validating blocks\n\n**Parameters** \n- `cachSize` - the size of the cach\n- `seed` - the seed as a `Buffer`\n\n\n### `ethash.run(val, nonce, fullsize)`\nRuns ethash on a give val/nonce pair. NOTE: you need to run [`ethash.mkcache(cacheSize, seed)`](#ethashverifypowcachesize-seed) first before using this function.\n\n**Parameters** \n- `cachSize` - the size of the cach\n- `seed` - the seed as a `Buffer`\n- `fullsize` - the fullsize of the cache.\n\n**Return**\nand `Object` containing \n- `hash`  - the hash of the value\n- `mix` - the mis result\n\n# TESTS\n`npm test`\n\n# LICENSE\n[MPL-2.0](https://www.mozilla.org/MPL/2.0/)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/ethereumjs/ethashjs.git"
  },
  "scripts": {
    "test": "node ./tests/"
  },
  "version": "0.0.7"
}
