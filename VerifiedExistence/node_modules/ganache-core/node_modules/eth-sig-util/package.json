{
  "_args": [
    [
      "eth-sig-util@https://registry.npmjs.org/eth-sig-util/-/eth-sig-util-2.3.0.tgz",
      "/home/dominik/blockchain/DocProof/node_modules/ganache-core"
    ]
  ],
  "_from": "eth-sig-util@https://registry.npmjs.org/eth-sig-util/-/eth-sig-util-2.3.0.tgz",
  "_id": "eth-sig-util@2.3.0",
  "_inCache": true,
  "_location": "/ganache-core/eth-sig-util",
  "_phantomChildren": {
    "bn.js": "4.11.8",
    "create-hash": "1.2.0",
    "ethjs-util": "0.1.6",
    "keccak": "1.4.0",
    "keccakjs": "0.2.3",
    "rlp": "2.2.4",
    "safe-buffer": "5.2.0",
    "secp256k1": "3.8.0"
  },
  "_requested": {
    "name": "eth-sig-util",
    "raw": "eth-sig-util@https://registry.npmjs.org/eth-sig-util/-/eth-sig-util-2.3.0.tgz",
    "rawSpec": "https://registry.npmjs.org/eth-sig-util/-/eth-sig-util-2.3.0.tgz",
    "scope": null,
    "spec": "https://registry.npmjs.org/eth-sig-util/-/eth-sig-util-2.3.0.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/ganache-core"
  ],
  "_resolved": "https://registry.npmjs.org/eth-sig-util/-/eth-sig-util-2.3.0.tgz",
  "_shasum": "c54a6ac8e8796f7e25f59cf436982a930e645231",
  "_shrinkwrap": null,
  "_spec": "eth-sig-util@https://registry.npmjs.org/eth-sig-util/-/eth-sig-util-2.3.0.tgz",
  "_where": "/home/dominik/blockchain/DocProof/node_modules/ganache-core",
  "author": {
    "name": "Dan Finlay"
  },
  "bugs": {
    "url": "https://github.com/MetaMask/eth-sig-util/issues"
  },
  "dependencies": {
    "buffer": "^5.2.1",
    "elliptic": "^6.4.0",
    "ethereumjs-abi": "0.6.5",
    "ethereumjs-util": "^5.1.1",
    "tweetnacl": "^1.0.0",
    "tweetnacl-util": "^0.15.0"
  },
  "description": "A few useful functions for signing ethereum data",
  "devDependencies": {
    "tape": "^4.9.1"
  },
  "homepage": "https://github.com/MetaMask/eth-sig-util#readme",
  "keywords": [
    "ethereum",
    "signature"
  ],
  "license": "ISC",
  "main": "index.js",
  "name": "eth-sig-util",
  "optionalDependencies": {},
  "readme": "# Eth-Sig-Util [![CircleCI](https://circleci.com/gh/MetaMask/eth-sig-util.svg?style=svg)](https://circleci.com/gh/MetaMask/eth-sig-util)\n\n[![Greenkeeper badge](https://badges.greenkeeper.io/MetaMask/eth-sig-util.svg)](https://greenkeeper.io/)\n\nA small collection of ethereum signing functions.\n\nYou can find usage examples [here](https://github.com/flyswatter/js-eth-personal-sign-examples) \n\n[Available on NPM](https://www.npmjs.com/package/eth-sig-util)\n\n## Supported Signing Methods\n\nCurrently there is only one supported signing protocol. More will be added as standardized. \n\n- Personal Sign (`personal_sign`) [geth thread](https://github.com/ethereum/go-ethereum/pull/2940)\n\n\n## Installation\n\n```\nnpm install eth-sig-util --save\n```\n\n## Methods\n\n### concatSig(v, r, s)\n\nAll three arguments should be provided as buffers.\n\nReturns a continuous, hex-prefixed hex value for the signature, suitable for inclusion in a JSON transaction's data field.\n\n### normalize(address)\n\nTakes an address of either upper or lower case, with or without a hex prefix, and returns an all-lowercase, hex-prefixed address, suitable for submitting to an ethereum provider.\n\n### personalSign (privateKeyBuffer, msgParams)\n\nmsgParams should have a `data` key that is hex-encoded data to sign.\n\nReturns the prefixed signature expected for calls to `eth.personalSign`.\n\n### recoverPersonalSignature (msgParams)\n\nmsgParams should have a `data` key that is hex-encoded data unsigned, and a `sig` key that is hex-encoded and already signed.\n\nReturns a hex-encoded sender address.\n\n### signTypedData (privateKeyBuffer, msgParams)\n\nSigns typed data as per [EIP712](https://github.com/ethereum/EIPs/pull/712).\n\nData should be under `data` key of `msgParams`. The method returns prefixed signature.\n\n### recoverTypedSignature ({data, sig})\n\nReturn address of a signer that did `signTypedData`.\n\nExpects the same data that were used for signing. `sig` is a prefixed signature.\n\n### typedSignatureHash (typedData)\n\nReturn hex-encoded hash of typed data params according to [EIP712](https://github.com/ethereum/EIPs/pull/712) schema.\n\n### extractPublicKey (msgParams)\n\nmsgParams should have a `data` key that is hex-encoded data unsigned, and a `sig` key that is hex-encoded and already signed.\n\nReturns a hex-encoded public key.\n\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/MetaMask/eth-sig-util.git"
  },
  "scripts": {
    "test": "node test/index.js"
  },
  "version": "2.3.0"
}
