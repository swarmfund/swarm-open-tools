{
  "_args": [
    [
      "merkle-patricia-tree@https://registry.npmjs.org/merkle-patricia-tree/-/merkle-patricia-tree-2.3.2.tgz",
      "/home/dominik/blockchain/DocProof/node_modules/ganache-core"
    ]
  ],
  "_from": "merkle-patricia-tree@https://registry.npmjs.org/merkle-patricia-tree/-/merkle-patricia-tree-2.3.2.tgz",
  "_id": "merkle-patricia-tree@2.3.2",
  "_inCache": true,
  "_location": "/ganache-core/merkle-patricia-tree",
  "_phantomChildren": {
    "bn.js": "4.11.8",
    "create-hash": "1.2.0",
    "deferred-leveldown": "1.2.2",
    "errno": "0.1.7",
    "ethjs-util": "0.1.6",
    "functional-red-black-tree": "1.0.1",
    "immediate": "3.2.3",
    "inherits": "2.0.4",
    "keccak": "1.4.0",
    "level-iterator-stream": "1.3.1",
    "ltgt": "2.2.1",
    "prr": "1.0.1",
    "rlp": "2.2.4",
    "safe-buffer": "5.2.0",
    "secp256k1": "3.8.0",
    "xtend": "4.0.2"
  },
  "_requested": {
    "name": "merkle-patricia-tree",
    "raw": "merkle-patricia-tree@https://registry.npmjs.org/merkle-patricia-tree/-/merkle-patricia-tree-2.3.2.tgz",
    "rawSpec": "https://registry.npmjs.org/merkle-patricia-tree/-/merkle-patricia-tree-2.3.2.tgz",
    "scope": null,
    "spec": "https://registry.npmjs.org/merkle-patricia-tree/-/merkle-patricia-tree-2.3.2.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/ganache-core",
    "/ganache-core/eth-json-rpc-middleware/ethereumjs-block",
    "/ganache-core/eth-json-rpc-middleware/ethereumjs-vm",
    "/ganache-core/eth-json-rpc-middleware/ethereumjs-vm/ethereumjs-block",
    "/ganache-core/eth-tx-summary/ethereumjs-block",
    "/ganache-core/eth-tx-summary/ethereumjs-vm",
    "/ganache-core/eth-tx-summary/ethereumjs-vm/ethereumjs-block",
    "/ganache-core/ethereumjs-block",
    "/ganache-core/ethereumjs-vm",
    "/ganache-core/web3-provider-engine/ethereumjs-block",
    "/ganache-core/web3-provider-engine/ethereumjs-vm",
    "/ganache-core/web3-provider-engine/ethereumjs-vm/ethereumjs-block"
  ],
  "_resolved": "https://registry.npmjs.org/merkle-patricia-tree/-/merkle-patricia-tree-2.3.2.tgz",
  "_shasum": "982ca1b5a0fde00eed2f6aeed1f9152860b8208a",
  "_shrinkwrap": null,
  "_spec": "merkle-patricia-tree@https://registry.npmjs.org/merkle-patricia-tree/-/merkle-patricia-tree-2.3.2.tgz",
  "_where": "/home/dominik/blockchain/DocProof/node_modules/ganache-core",
  "author": {
    "email": "mjbecze@gmail.com",
    "name": "mjbecze"
  },
  "bugs": {
    "url": "https://github.com/ethereumjs/merkle-patricia-tree/issues"
  },
  "contributors": [
    {
      "name": "Aaron Kumavis",
      "email": "http://aaron.kumavis.me/",
      "url": "https://github.com/kumavis"
    }
  ],
  "dependencies": {
    "async": "^1.4.2",
    "ethereumjs-util": "^5.0.0",
    "level-ws": "0.0.0",
    "levelup": "^1.2.1",
    "memdown": "^1.0.0",
    "readable-stream": "^2.0.0",
    "rlp": "^2.0.0",
    "semaphore": ">=1.0.1"
  },
  "description": "This is an implementation of the modified merkle patricia tree as speficed in the Ethereum's yellow paper.",
  "devDependencies": {
    "browserify": "^13.0.0",
    "coveralls": "^2.11.6",
    "documentation": "^3.0.4",
    "ethereumjs-testing": "0.0.1",
    "istanbul": "^0.4.1",
    "karma": "^1.7.1",
    "karma-browserify": "^5.0.0",
    "karma-chrome-launcher": "^2.2.0",
    "karma-detect-browsers": "^2.0.2",
    "karma-env-preprocessor": "^0.1.1",
    "karma-firefox-launcher": "^1.0.1",
    "karma-tap": "^1.0.3",
    "standard": "^5.3.1",
    "tape": "^4.4.0"
  },
  "homepage": "https://github.com/ethereumjs/merkle-patricia-tree#readme",
  "keywords": [
    "ethereum",
    "merkle",
    "radix",
    "trie"
  ],
  "license": "MPL-2.0",
  "main": "index.js",
  "name": "merkle-patricia-tree",
  "optionalDependencies": {},
  "readme": "# SYNOPSIS \n[![NPM Package](https://img.shields.io/npm/v/merkle-patricia-tree.svg?style=flat-square)](https://www.npmjs.org/package/merkle-patricia-tree)\n[![Build Status](https://img.shields.io/travis/ethereumjs/merkle-patricia-tree.svg?branch=master&style=flat-square)](https://travis-ci.org/ethereumjs/merkle-patricia-tree)\n[![Coverage Status](https://img.shields.io/coveralls/ethereumjs/merkle-patricia-tree.svg?style=flat-square)](https://coveralls.io/r/ethereumjs/merkle-patricia-tree)\n[![Gitter](https://img.shields.io/gitter/room/ethereum/ethereumjs-lib.svg?style=flat-square)](https://gitter.im/ethereum/ethereumjs-lib) or #ethereumjs on freenode  \n\n[![js-standard-style](https://cdn.rawgit.com/feross/standard/master/badge.svg)](https://github.com/feross/standard)  \n\nThis is an implementation of the modified merkle patricia tree as specified in the [Ethereum's yellow paper](http://gavwood.com/Paper.pdf).\n\n> The modified Merkle Patricia tree (trie) provides a persistent data structure to map between arbitrary-length binary data (byte arrays). It is defined in terms of a mutable data structure to map between 256-bit binary fragments and arbitrary-length binary data. The core of the trie, and its sole requirement in terms of the protocol specification is to provide a single 32-byte value that identifies a given set of key-value pairs.   \n  \\- Ethereum's yellow paper  \n\nThe only backing store supported is LevelDB through the ```levelup``` module.\n\n# INSTALL\n `npm install merkle-patricia-tree`\n\n# USAGE\n\n## Initialization and Basic Usage\n\n```javascript\nvar Trie = require('merkle-patricia-tree'),\nlevelup = require('levelup'),\ndb = levelup('./testdb'),\ntrie = new Trie(db); \n\ntrie.put('test', 'one', function () {\n  trie.get('test', function (err, value) {\n    if(value) console.log(value.toString())\n  });\n});\n```\n\n## Merkle Proofs\n\n```javascript\nTrie.prove(trie, 'test', function (err, prove) {\n  if (err) return cb(err)\n  Trie.verifyProof(trie.root, 'test', prove, function (err, value) {\n    if (err) return cb(err)\n    console.log(value.toString())\n    cb()\n  })\n})\n```\n\n## Read stream on Geth DB\n\n```javascript\nvar levelup = require('levelup')\nvar Trie = require('./secure')\n\nvar stateRoot = \"0xd7f8974fb5ac78d9ac099b9ad5018bedc2ce0a72dad1827a1709da30580f0544\" // Block #222\n\nvar db = levelup('YOUR_PATH_TO_THE_GETH_CHAIN_DB')\nvar trie = new Trie(db, stateRoot)\n\ntrie.createReadStream()\n  .on('data', function (data) {\n    console.log(data)\n  })\n  .on('end', function() { \n    console.log('End.')\n  })\n```\n\n# API\n[./docs/](./docs/index.md)\n\n# TESTING\n`npm test`\n\n# REFERENCES\n\n- [\"Exploring Ethereum's state trie with Node.js\"](https://wanderer.github.io/ethereum/nodejs/code/2014/05/21/using-ethereums-tries-with-node/) blog post\n- [\"Merkling in Ethereum\"](https://blog.ethereum.org/2015/11/15/merkling-in-ethereum/) blog post\n- [Ethereum Trie Specification](https://github.com/ethereum/wiki/wiki/Patricia-Tree) Wiki\n- [\"Understanding the ethereum trie\"](https://easythereentropy.wordpress.com/2014/06/04/understanding-the-ethereum-trie/) blog post\n- [\"Trie and Patricia Trie Overview\"](https://www.youtube.com/watch?v=jXAHLqQthKw&t=26s) Video Talk on Youtube\n\n# LICENSE\nMPL-2.0\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/ethereumjs/merkle-patricia-tree.git"
  },
  "scripts": {
    "build": "browserify --s Trie index.js > ./dist/trie.js",
    "build:docs": "documentation --github  -f md ./index.js ./secure.js ./proof.js > ./docs/index-template.md",
    "coverage": "istanbul cover tape ./test/*.js",
    "coveralls": "npm run coverage && coveralls <coverage/lcov.info",
    "lint": "standard",
    "prepublish": "npm run build",
    "test": "npm run test:node && npm run test:browser",
    "test:browser": "karma start karma.conf.js",
    "test:node": "tape ./test/*.js"
  },
  "standard": {
    "ignore": [
      "dist/**",
      "package-init.js",
      "package.js"
    ]
  },
  "version": "2.3.2"
}
