{
  "_args": [
    [
      "yaeti@https://registry.npmjs.org/yaeti/-/yaeti-0.0.6.tgz",
      "/home/dominik/blockchain/DocProof/node_modules/ganache-core"
    ]
  ],
  "_from": "yaeti@https://registry.npmjs.org/yaeti/-/yaeti-0.0.6.tgz",
  "_id": "yaeti@0.0.6",
  "_inCache": true,
  "_location": "/ganache-core/yaeti",
  "_phantomChildren": {},
  "_requested": {
    "name": "yaeti",
    "raw": "yaeti@https://registry.npmjs.org/yaeti/-/yaeti-0.0.6.tgz",
    "rawSpec": "https://registry.npmjs.org/yaeti/-/yaeti-0.0.6.tgz",
    "scope": null,
    "spec": "https://registry.npmjs.org/yaeti/-/yaeti-0.0.6.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/ganache-core/@web3-js/websocket",
    "/ganache-core/websocket"
  ],
  "_resolved": "https://registry.npmjs.org/yaeti/-/yaeti-0.0.6.tgz",
  "_shasum": "f26f484d72684cf42bedfb76970aa1608fbf9577",
  "_shrinkwrap": null,
  "_spec": "yaeti@https://registry.npmjs.org/yaeti/-/yaeti-0.0.6.tgz",
  "_where": "/home/dominik/blockchain/DocProof/node_modules/ganache-core",
  "author": {
    "email": "ibc@aliax.net",
    "name": "Iñaki Baz Castillo"
  },
  "browser": {
    "./lib/Event.js": "./lib/Event.browser.js"
  },
  "bugs": {
    "url": "https://github.com/ibc/yaeti/issues"
  },
  "dependencies": {},
  "description": "Yet Another EventTarget Implementation",
  "devDependencies": {
    "gulp": "git+https://github.com/gulpjs/gulp.git#4.0",
    "gulp-jscs": "^1.6.0",
    "gulp-jscs-stylish": "^1.1.0",
    "gulp-jshint": "^1.11.2",
    "jshint-stylish": "~1.0.2"
  },
  "engines": {
    "node": ">=0.10.32"
  },
  "homepage": "https://github.com/ibc/yaeti#readme",
  "license": "MIT",
  "main": "index.js",
  "name": "yaeti",
  "optionalDependencies": {},
  "readme": "# yaeti\n\nYet Another [EventTarget](https://developer.mozilla.org/es/docs/Web/API/EventTarget) Implementation.\n\nThe library exposes both the [EventTarget](https://developer.mozilla.org/es/docs/Web/API/EventTarget) interface and the [Event](https://developer.mozilla.org/en-US/docs/Web/API/Event) interface.\n\n\n## Installation\n\n```bash\n$ npm install yaeti --save\n```\n\n\n## Usage\n\n```javascript\nvar yaeti = require('yaeti');\n\n\n// Custom class we want to make an EventTarget.\nfunction Foo() {\n    // Make Foo an EventTarget.\n    yaeti.EventTarget.call(this);\n}\n\n// Create an instance.\nvar foo = new Foo();\n\nfunction listener1() {\n    console.log('listener1');\n}\n\nfunction listener2() {\n    console.log('listener2');\n}\n \nfoo.addEventListener('bar', listener1);\nfoo.addEventListener('bar', listener2);\nfoo.removeEventListener('bar', listener1);\n\nvar event = new yaeti.Event('bar');\n\nfoo.dispatchEvent(event);\n\n\n// Output:\n// => \"listener2\"\n```\n\n\n\n## API\n\n\n#### `yaeti.EventTarget` interface\n\nImplementation of the [EventTarget](https://developer.mozilla.org/es/docs/Web/API/EventTarget) interface.\n\n* Make a custom class inherit from `EventTarget`:\n```javascript\nfunction Foo() {\n    yaeti.EventTarget.call(this);\n}\n```\n\n* Make an existing object an `EventTarget`:\n```javascript\nyaeti.EventTarget.call(obj);\n```\n\nThe interface implements the `addEventListener`, `removeEventListener` and `dispatchEvent` methods as defined by the W3C.\n\n\n##### `listeners` read-only property\n\nReturns an object whose keys are configured event types (String) and whose values are an array of listeners (functions) for those event types.\n\n\n#### `yaeti.Event` interface\n\nImplementation of the [Event](https://developer.mozilla.org/en-US/docs/Web/API/Event) interface.\n\n*NOTE:* Just useful in Node (the browser already exposes the native `Event` interface).\n\n```javascript\nvar event = new yaeti.Event('bar');\n```\n\n\n## Author\n\n[Iñaki Baz Castillo](https://github.com/ibc)\n\n\n## License\n\n[MIT](./LICENSE)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/ibc/yaeti.git"
  },
  "version": "0.0.6"
}
