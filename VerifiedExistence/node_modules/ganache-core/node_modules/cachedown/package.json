{
  "_args": [
    [
      "cachedown@https://registry.npmjs.org/cachedown/-/cachedown-1.0.0.tgz",
      "/home/dominik/blockchain/DocProof/node_modules/ganache-core"
    ]
  ],
  "_from": "cachedown@https://registry.npmjs.org/cachedown/-/cachedown-1.0.0.tgz",
  "_id": "cachedown@1.0.0",
  "_inCache": true,
  "_location": "/ganache-core/cachedown",
  "_phantomChildren": {
    "xtend": "4.0.2"
  },
  "_requested": {
    "name": "cachedown",
    "raw": "cachedown@https://registry.npmjs.org/cachedown/-/cachedown-1.0.0.tgz",
    "rawSpec": "https://registry.npmjs.org/cachedown/-/cachedown-1.0.0.tgz",
    "scope": null,
    "spec": "https://registry.npmjs.org/cachedown/-/cachedown-1.0.0.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/ganache-core"
  ],
  "_resolved": "https://registry.npmjs.org/cachedown/-/cachedown-1.0.0.tgz",
  "_shasum": "d43f036e4510696b31246d7db31ebf0f7ac32d15",
  "_shrinkwrap": null,
  "_spec": "cachedown@https://registry.npmjs.org/cachedown/-/cachedown-1.0.0.tgz",
  "_where": "/home/dominik/blockchain/DocProof/node_modules/ganache-core",
  "author": {
    "email": "mark.vayngrib@lablz.com",
    "name": "Mark Vayngrib",
    "url": "http://github.com/mvayngrib"
  },
  "dependencies": {
    "abstract-leveldown": "^2.4.1",
    "lru-cache": "^3.2.0"
  },
  "description": "leveldown implementation that proxies to underlying leveldown instance with lru cache",
  "devDependencies": {
    "levelup": "^1.3.1",
    "memdown": "^1.1.0",
    "rimraf": "^2.4.4",
    "tape": "^4.2.2"
  },
  "license": "MIT",
  "main": "index.js",
  "name": "cachedown",
  "optionalDependencies": {},
  "readme": "# cachedown\n\nleveldown with a cache, for fast puts and gets\n\n[![Build Status](https://travis-ci.org/mvayngrib/cachedown.png)](https://travis-ci.org/mvayngrib/cachedown)\n\n## Usage\n\n```js\nvar slow = require('leveldown')\nvar fast = require('cachedown')\nvar levelup = require('levelup')\n\nvar db = levelup('./db.db', {\n  db: function (location) {\n    // careful! this db has a max cache size of Infinity!\n    // to limit cache size, use fast(location, slow).maxSize(/* max size */)\n    return fast(location, slow)\n  }\n})\n\n// use db with better performance for puts and gets\ndb.put('hey', 'ho', function (err) {\n  db.get('hey', function (err, val) {\n    // val comes from internal cache\n    console.log(val) // ho\n  })\n})\n```\n\n### Misc\n\n```js\n// 1\n\nvar leveldown = require('leveldown')\nvar levelup = require('levelup')\nvar cachedown = require('cachedown')\n// set default leveldown\ncachedown.setLeveldown(leveldown)\nvar db = levelup('path/to/db', { db: cachedown })\n\n// 2\n\nvar cachedownInstance = new cachedown('path/to/db')\n// change max size\ncachedownInstance.maxSize(100)\n// clear cache\ncachedownInstance.clearCache()\n```\n",
  "readmeFilename": "README.md",
  "scripts": {
    "test": "node test/test"
  },
  "version": "1.0.0"
}
