{
  "_args": [
    [
      "safe-event-emitter@https://registry.npmjs.org/safe-event-emitter/-/safe-event-emitter-1.0.1.tgz",
      "/home/dominik/blockchain/DocProof/node_modules/ganache-core"
    ]
  ],
  "_from": "safe-event-emitter@https://registry.npmjs.org/safe-event-emitter/-/safe-event-emitter-1.0.1.tgz",
  "_id": "safe-event-emitter@1.0.1",
  "_inCache": true,
  "_location": "/ganache-core/safe-event-emitter",
  "_phantomChildren": {},
  "_requested": {
    "name": "safe-event-emitter",
    "raw": "safe-event-emitter@https://registry.npmjs.org/safe-event-emitter/-/safe-event-emitter-1.0.1.tgz",
    "rawSpec": "https://registry.npmjs.org/safe-event-emitter/-/safe-event-emitter-1.0.1.tgz",
    "scope": null,
    "spec": "https://registry.npmjs.org/safe-event-emitter/-/safe-event-emitter-1.0.1.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/ganache-core/json-rpc-engine"
  ],
  "_resolved": "https://registry.npmjs.org/safe-event-emitter/-/safe-event-emitter-1.0.1.tgz",
  "_shasum": "5b692ef22329ed8f69fdce607e50ca734f6f20af",
  "_shrinkwrap": null,
  "_spec": "safe-event-emitter@https://registry.npmjs.org/safe-event-emitter/-/safe-event-emitter-1.0.1.tgz",
  "_where": "/home/dominik/blockchain/DocProof/node_modules/ganache-core",
  "author": "",
  "dependencies": {
    "events": "^3.0.0"
  },
  "description": "An `EventEmitter` that isolates the emitter from errors in handlers. If an error is thrown in a handler it is caught and re-thrown inside of a `setTimeout` so as to not interupt the emitter's code flow.",
  "devDependencies": {},
  "license": "ISC",
  "main": "index.js",
  "name": "safe-event-emitter",
  "optionalDependencies": {},
  "readme": "# safe-event-emitter\n\nAn `EventEmitter` that isolates the emitter from errors in handlers. If an error is thrown in a handler it is caught and re-thrown inside of a `setTimeout` so as to not interupt the emitter's code flow.\n\nAPI is the same as `EventEmitter`.\n\n### usage\n\n```js\nconst SafeEventEmitter = require('safe-event-emitter')\n\nconst ee = new SafeEventEmitter()\nee.on('boom', () => { throw new Error() })\nee.emit('boom') // no error here\n\n// error is thrown after setTimeout\n```\n",
  "readmeFilename": "README.md",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "version": "1.0.1"
}
