{
  "_args": [
    [
      "hdkey@https://registry.npmjs.org/hdkey/-/hdkey-1.1.1.tgz",
      "/home/dominik/blockchain/DocProof/node_modules/ganache-core"
    ]
  ],
  "_from": "hdkey@https://registry.npmjs.org/hdkey/-/hdkey-1.1.1.tgz",
  "_id": "hdkey@1.1.1",
  "_inCache": true,
  "_location": "/ganache-core/hdkey",
  "_phantomChildren": {},
  "_requested": {
    "name": "hdkey",
    "raw": "hdkey@https://registry.npmjs.org/hdkey/-/hdkey-1.1.1.tgz",
    "rawSpec": "https://registry.npmjs.org/hdkey/-/hdkey-1.1.1.tgz",
    "scope": null,
    "spec": "https://registry.npmjs.org/hdkey/-/hdkey-1.1.1.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/ganache-core/ethereumjs-wallet"
  ],
  "_resolved": "https://registry.npmjs.org/hdkey/-/hdkey-1.1.1.tgz",
  "_shasum": "c2b3bfd5883ff9529b72f2f08b28be0972a9f64a",
  "_shrinkwrap": null,
  "_spec": "hdkey@https://registry.npmjs.org/hdkey/-/hdkey-1.1.1.tgz",
  "_where": "/home/dominik/blockchain/DocProof/node_modules/ganache-core",
  "bugs": {
    "url": "https://github.com/cryptocoinjs/hdkey/issues"
  },
  "dependencies": {
    "coinstring": "^2.0.0",
    "safe-buffer": "^5.1.1",
    "secp256k1": "^3.0.1"
  },
  "description": "Bitcoin BIP32 hierarchical deterministic keys",
  "devDependencies": {
    "bigi": "^1.1.0",
    "coveralls": "^2.10.0",
    "ecurve": "^1.0.0",
    "istanbul": "^0.3.17",
    "mocha": "^2.2.5",
    "mocha-lcov-reporter": "0.0.1",
    "mochify": "^2.10.0",
    "secure-random": "^1.0.0",
    "standard": "^7.1.1"
  },
  "homepage": "https://github.com/cryptocoinjs/hdkey",
  "keywords": [
    "bip",
    "bip32",
    "bitcoin",
    "crypto",
    "deterministic",
    "hierarchical",
    "key"
  ],
  "license": "MIT",
  "main": "lib/hdkey.js",
  "name": "hdkey",
  "optionalDependencies": {},
  "readme": "hdkey\n=====\n\n[![NPM Package](https://img.shields.io/npm/v/hdkey.svg?style=flat-square)](https://www.npmjs.org/package/hdkey)\n[![build status](https://secure.travis-ci.org/cryptocoinjs/hdkey.svg)](http://travis-ci.org/cryptocoinjs/hdkey)\n[![js-standard-style](https://img.shields.io/badge/code%20style-standard-brightgreen.svg)](http://standardjs.com/)\n\nA JavaScript component for [BIP32](https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki)(hierarchical deterministic keys).\n\n\nInstallation\n------------\n\n    npm i --save hdkey\n\n\nUsage\n-----\n\n**example:**\n\n```js\nvar HDKey = require('hdkey')\nvar seed = 'a0c42a9c3ac6abf2ba6a9946ae83af18f51bf1c9fa7dacc4c92513cc4dd015834341c775dcd4c0fac73547c5662d81a9e9361a0aac604a73a321bd9103bce8af'\nvar hdkey = HDKey.fromMasterSeed(new Buffer(seed, 'hex'))\nconsole.log(hdkey.privateExtendedKey)\n// => 'xprv9s21ZrQH143K2SKJK9EYRW3Vsg8tWVHRS54hAJasj1eGsQXeWDHLeuu5hpLHRbeKedDJM4Wj9wHHMmuhPF8dQ3bzyup6R7qmMQ1i1FtzNEW'\nconsole.log(hdkey.publicExtendedKey)\n// => 'xpub661MyMwAqRbcEvPmRAmYndzERhyNux1GoHzHxgzVHMBFkCro3kbbCiDZZ5XabZDyXPj5mH3hktvkjhhUdCQxie5e1g4t2GuAWNbPmsSfDp2'\n```\n\n\n### `HDKey.fromMasterSeed(seedBuffer[, versions])`\n\nCreates an `hdkey` object from a master seed buffer. Accepts an optional `versions` object.\n\n```js\nvar seed = 'a0c42a9c3ac6abf2ba6a9946ae83af18f51bf1c9fa7dacc4c92513cc4dd015834341c775dcd4c0fac73547c5662d81a9e9361a0aac604a73a321bd9103bce8af'\nvar hdkey = HDKey.fromMasterSeed(new Buffer(seed, 'hex'))\n```\n\n### `HDKey.fromExtendedKey(extendedKey[, versions])`\n\nCreates an `hdkey` object from a `xprv` or `xpub` extended key string. Accepts an optional `versions` object.\n\n```js\nvar key = 'xprvA2nrNbFZABcdryreWet9Ea4LvTJcGsqrMzxHx98MMrotbir7yrKCEXw7nadnHM8Dq38EGfSh6dqA9QWTyefMLEcBYJUuekgW4BYPJcr9E7j'\nvar hdkey = HDKey.fromExtendedKey(key)\n```\n\n**or**\n\n```js\nvar key = 'xpub6FnCn6nSzZAw5Tw7cgR9bi15UV96gLZhjDstkXXxvCLsUXBGXPdSnLFbdpq8p9HmGsApME5hQTZ3emM2rnY5agb9rXpVGyy3bdW6EEgAtqt'\nvar hdkey = HDKey.fromExtendedKey(key)\n```\n\n### `HDKey.fromJSON(obj)`\n\nCreates an `hdkey` object from an object created via `hdkey.toJSON()`.\n\n---\n\n### `hdkey.derive(path)`\n\nDerives the `hdkey` at `path` from the current `hdkey`.\n\n```js\nvar seed = 'fffcf9f6f3f0edeae7e4e1dedbd8d5d2cfccc9c6c3c0bdbab7b4b1aeaba8a5a29f9c999693908d8a8784817e7b7875726f6c696663605d5a5754514e4b484542'\nvar hdkey = HDKey.fromMasterSeed(Buffer.from(seed, 'hex'))\nvar childkey = hdkey.derive(\"m/0/2147483647'/1\")\n\nconsole.log(childkey.privateExtendedKey)\n// -> \"xprv9zFnWC6h2cLgpmSA46vutJzBcfJ8yaJGg8cX1e5StJh45BBciYTRXSd25UEPVuesF9yog62tGAQtHjXajPPdbRCHuWS6T8XA2ECKADdw4Ef\"\nconsole.log(childkey.publicExtendedKey)\n// -> \"xpub6DF8uhdarytz3FWdA8TvFSvvAh8dP3283MY7p2V4SeE2wyWmG5mg5EwVvmdMVCQcoNJxGoWaU9DCWh89LojfZ537wTfunKau47EL2dhHKon\"\n```\n\n### `hdkey.sign(hash)`\n\nSigns the buffer `hash` with the private key using `secp256k1` and returns the signature as a buffer.\n\n### `hdkey.verify(hash, signature)`\n\nVerifies that the `signature` is valid for `hash` and the `hdkey`'s public key using `secp256k1`. Returns `true` for valid, `false` for invalid. Throws if the `hash` or `signature` is the wrong length.\n\n### `hdkey.wipePrivateData()`\n\nWipes all record of the private key from the `hdkey` instance. After calling this method, the instance will behave as if it was created via `HDKey.fromExtendedKey(xpub)`.\n\n### `hdkey.toJSON()`\n\nSerializes the `hdkey` to an object that can be `JSON.stringify()`ed.\n\n```js\nvar seed = 'fffcf9f6f3f0edeae7e4e1dedbd8d5d2cfccc9c6c3c0bdbab7b4b1aeaba8a5a29f9c999693908d8a8784817e7b7875726f6c696663605d5a5754514e4b484542'\nvar hdkey = HDKey.fromMasterSeed(Buffer.from(seed, 'hex'))\n\nconsole.log(hdkey.toJSON())\n// -> {\n//      xpriv: 'xprv9s21ZrQH143K31xYSDQpPDxsXRTUcvj2iNHm5NUtrGiGG5e2DtALGdso3pGz6ssrdK4PFmM8NSpSBHNqPqm55Qn3LqFtT2emdEXVYsCzC2U',\n//      xpub: 'xpub661MyMwAqRbcFW31YEwpkMuc5THy2PSt5bDMsktWQcFF8syAmRUapSCGu8ED9W6oDMSgv6Zz8idoc4a6mr8BDzTJY47LJhkJ8UB7WEGuduB'\n//    }\n```\n\n### `hdkey.privateKey`\n\nGetter/Setter of the `hdkey`'s private key, stored as a buffer.\n\n### `hdkey.publicKey`\n\nGetter/Setter of the `hdkey`'s public key, stored as a buffer.\n\n### `hdkey.privateExtendedKey`\n\nGetter/Setter of the `hdkey`'s `xprv`, stored as a string.\n\n### `hdkey.publicExtendedKey`\n\nGetter/Setter of the `hdkey`'s `xpub`, stored as a string.\n\nReferences\n----------\n- https://github.com/bitcoinjs/bitcoinjs-lib/blob/master/src/hdnode.js\n- http://bip32.org/\n- http://blog.richardkiss.com/?p=313\n- https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki\n- http://bitcoinmagazine.com/8396/deterministic-wallets-advantages-flaw/\n\n\nLicense\n-------\n\nMIT\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/cryptocoinjs/hdkey.git"
  },
  "scripts": {
    "browser-test": "mochify --wd -R spec",
    "coverage": "istanbul cover ./node_modules/.bin/_mocha -- --reporter list test/*.js",
    "coveralls": "npm run-script coverage && node ./node_modules/.bin/coveralls < coverage/lcov.info",
    "lint": "standard",
    "test": "standard && mocha",
    "unit": "mocha"
  },
  "version": "1.1.1"
}
