{
  "_args": [
    [
      "pull-defer@https://registry.npmjs.org/pull-defer/-/pull-defer-0.2.3.tgz",
      "/home/dominik/blockchain/DocProof/node_modules/ganache-core"
    ]
  ],
  "_from": "pull-defer@https://registry.npmjs.org/pull-defer/-/pull-defer-0.2.3.tgz",
  "_id": "pull-defer@0.2.3",
  "_inCache": true,
  "_location": "/ganache-core/pull-defer",
  "_phantomChildren": {},
  "_requested": {
    "name": "pull-defer",
    "raw": "pull-defer@https://registry.npmjs.org/pull-defer/-/pull-defer-0.2.3.tgz",
    "rawSpec": "https://registry.npmjs.org/pull-defer/-/pull-defer-0.2.3.tgz",
    "scope": null,
    "spec": "https://registry.npmjs.org/pull-defer/-/pull-defer-0.2.3.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/ganache-core/level-sublevel"
  ],
  "_resolved": "https://registry.npmjs.org/pull-defer/-/pull-defer-0.2.3.tgz",
  "_shasum": "4ee09c6d9e227bede9938db80391c3dac489d113",
  "_shrinkwrap": null,
  "_spec": "pull-defer@https://registry.npmjs.org/pull-defer/-/pull-defer-0.2.3.tgz",
  "_where": "/home/dominik/blockchain/DocProof/node_modules/ganache-core",
  "author": {
    "email": "dominic.tarr@gmail.com",
    "name": "Dominic Tarr",
    "url": "http://dominictarr.com"
  },
  "bugs": {
    "url": "https://github.com/dominictarr/pull-defer/issues"
  },
  "dependencies": {},
  "description": "a deferred source, sink or through pull-stream",
  "devDependencies": {
    "pull-pair": "~1.0.0",
    "pull-peek": "0.0.0",
    "pull-stream": "^3.2.0",
    "tape": "^4.5.1"
  },
  "homepage": "https://github.com/dominictarr/pull-defer",
  "license": "MIT",
  "name": "pull-defer",
  "optionalDependencies": {},
  "readme": "# pull-defer\n\ncreate a placeholder for a pull stream that won't start moving until later.\n\n## examples\n\n`pull-defer` can be used with source, sinks and transform streams.\n\n### through\n\n``` js\n//create a deferred through stream\nvar deferred = require('pull-defer').through()\n\npull(\n  input,\n  deferred,\n  output\n)\n\n//nothing will happen until deferred.resolve(stream) is called.\ndeferred.resolve(transform)\n```\n\n### source\n\n``` js\n//create a deferred through stream\nvar deferred = require('pull-defer').source()\n\npull(\n  deferred,\n  output\n)\n\n//nothing will happen until deferred.resolve(stream) is called.\ndeferred.resolve(input)\n```\n\n### sink\n\n``` js\n//create a deferred through stream\nvar deferred = require('pull-defer').sink()\n\npull(\n  input,\n  deferred\n)\n\n//nothing will happen until deferred.start(stream) is called.\ndeferred.resolve(output)\n```\n\n\n## License\n\nMIT\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/dominictarr/pull-defer.git"
  },
  "scripts": {
    "test": "set -e; for t in test/*.js; do node $t; done"
  },
  "version": "0.2.3"
}
