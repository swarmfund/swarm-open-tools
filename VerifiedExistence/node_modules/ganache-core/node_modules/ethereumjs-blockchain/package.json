{
  "_args": [
    [
      "ethereumjs-blockchain@https://registry.npmjs.org/ethereumjs-blockchain/-/ethereumjs-blockchain-4.0.3.tgz",
      "/home/dominik/blockchain/DocProof/node_modules/ganache-core"
    ]
  ],
  "_from": "ethereumjs-blockchain@https://registry.npmjs.org/ethereumjs-blockchain/-/ethereumjs-blockchain-4.0.3.tgz",
  "_id": "ethereumjs-blockchain@4.0.3",
  "_inCache": true,
  "_location": "/ganache-core/ethereumjs-blockchain",
  "_phantomChildren": {
    "bn.js": "4.11.8",
    "create-hash": "1.2.0",
    "ethjs-util": "0.1.6",
    "keccak": "1.4.0",
    "rlp": "2.2.4",
    "safe-buffer": "5.2.0",
    "secp256k1": "3.8.0",
    "yallist": "3.1.1"
  },
  "_requested": {
    "name": "ethereumjs-blockchain",
    "raw": "ethereumjs-blockchain@https://registry.npmjs.org/ethereumjs-blockchain/-/ethereumjs-blockchain-4.0.3.tgz",
    "rawSpec": "https://registry.npmjs.org/ethereumjs-blockchain/-/ethereumjs-blockchain-4.0.3.tgz",
    "scope": null,
    "spec": "https://registry.npmjs.org/ethereumjs-blockchain/-/ethereumjs-blockchain-4.0.3.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/ganache-core/ethereumjs-vm"
  ],
  "_resolved": "https://registry.npmjs.org/ethereumjs-blockchain/-/ethereumjs-blockchain-4.0.3.tgz",
  "_shasum": "e013034633a30ad2006728e8e2b21956b267b773",
  "_shrinkwrap": null,
  "_spec": "ethereumjs-blockchain@https://registry.npmjs.org/ethereumjs-blockchain/-/ethereumjs-blockchain-4.0.3.tgz",
  "_where": "/home/dominik/blockchain/DocProof/node_modules/ganache-core",
  "author": {
    "email": "mjbecze@gmail.com",
    "name": "mjbecze"
  },
  "bugs": {
    "url": "https://github.com/ethereumjs/ethereumjs-blockchain/issues"
  },
  "dependencies": {
    "async": "^2.6.1",
    "ethashjs": "~0.0.7",
    "ethereumjs-block": "~2.2.2",
    "ethereumjs-common": "^1.5.0",
    "ethereumjs-util": "~6.1.0",
    "flow-stoplight": "^1.0.0",
    "level-mem": "^3.0.1",
    "lru-cache": "^5.1.1",
    "rlp": "^2.2.2",
    "semaphore": "^1.1.0"
  },
  "description": "A module to store and interact with blocks",
  "devDependencies": {
    "@ethereumjs/config-nyc": "^1.1.1",
    "@ethereumjs/config-prettier": "^1.1.1",
    "@ethereumjs/config-tsc": "^1.1.1",
    "@ethereumjs/config-tslint": "^1.1.1",
    "@types/async": "^2.4.1",
    "@types/bn.js": "^4.11.4",
    "@types/lru-cache": "^5.1.0",
    "@types/node": "^11.11.4",
    "@types/semaphore": "^1.1.0",
    "@types/tape": "^4.2.33",
    "coveralls": "^3.0.2",
    "husky": "^2.1.0",
    "nyc": "^13.0.1",
    "prettier": "^1.16.4",
    "tape": "^4.9.1",
    "ts-node": "^8.0.3",
    "tslint": "^5.13.1",
    "typedoc": "^0.14.2",
    "typedoc-plugin-markdown": "^1.1.27",
    "typescript": "^3.3.3333",
    "typestrict": "^1.0.2"
  },
  "files": [
    "dist/**/*"
  ],
  "homepage": "https://github.com/ethereumjs/ethereumjs-blockchain#readme",
  "husky": {
    "hooks": {
      "pre-push": "npm run lint"
    }
  },
  "keywords": [
    "blockchain",
    "ethereum"
  ],
  "license": "MPL-2.0",
  "main": "dist/index.js",
  "name": "ethereumjs-blockchain",
  "optionalDependencies": {},
  "readme": "# SYNOPSIS\n\n[![NPM Package](https://img.shields.io/npm/v/ethereumjs-blockchain.svg?style=flat-square)](https://www.npmjs.org/package/ethereumjs-blockchain)\n[![Actions Status](https://github.com/ethereumjs/ethereumjs-blockchain/workflows/blockchain-test/badge.svg)](https://github.com/ethereumjs/ethereumjs-blockchain/actions)\n[![Coverage Status](https://img.shields.io/coveralls/ethereumjs/ethereumjs-blockchain.svg?style=flat-square)](https://coveralls.io/r/ethereumjs/ethereumjs-blockchain)\n[![Gitter](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/ethereum/ethereumjs-lib?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge) or #ethereumjs on freenode\n\nA module to store and interact with blocks.\n\n# INSTALL\n\n`npm install ethereumjs-blockchain`\n\n# API\n\n[./docs/](./docs/README.md)\n\n# EXAMPLE\n\nThe following is an example to iterate through an existing Geth DB (needs `level` to be installed separately).\n\nThis module performs write operations. Making a backup of your data before trying it is recommended. Otherwise, you can end up with a compromised DB state.\n\n```javascript\nconst level = require('level')\nconst Blockchain = require('ethereumjs-blockchain').default\nconst utils = require('ethereumjs-util')\n\nconst gethDbPath = './chaindata' // Add your own path here. It will get modified, see remarks.\nconst db = level(gethDbPath)\n\nnew Blockchain({ db: db }).iterator(\n  'i',\n  (block, reorg, cb) => {\n    const blockNumber = utils.bufferToInt(block.header.number)\n    const blockHash = block.hash().toString('hex')\n    console.log(`BLOCK ${blockNumber}: ${blockHash}`)\n    cb()\n  },\n  err => console.log(err || 'Done.'),\n)\n```\n\n**WARNING**: Since `ethereumjs-blockchain` is also doing write operations\non the DB for safety reasons only run this on a copy of your database, otherwise this might lead\nto a compromised DB state.\n\n# EthereumJS\n\nSee our organizational [documentation](https://ethereumjs.readthedocs.io) for an introduction to `EthereumJS` as well as information on current standards and best practices.\n\nIf you want to join for work or do improvements on the libraries have a look at our [contribution guidelines](https://ethereumjs.readthedocs.io/en/latest/contributing.html).\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/ethereumjs/ethereumjs-blockchain.git"
  },
  "scripts": {
    "build": "ethereumjs-config-build",
    "coverage": "ethereumjs-config-coverage",
    "coveralls": "ethereumjs-config-coveralls",
    "docs:build": "typedoc --out docs --mode file --readme none --theme markdown --mdEngine github --excludeNotExported --excludePrivate src",
    "format": "ethereumjs-config-format",
    "format:fix": "ethereumjs-config-format-fix",
    "lint": "ethereumjs-config-lint",
    "lint:fix": "ethereumjs-config-lint-fix",
    "prepublishOnly": "npm run lint && npm run test && npm run build",
    "test": "npm run build && ts-node node_modules/tape/bin/tape ./test/index.ts",
    "tsc": "ethereumjs-config-tsc",
    "tslint": "ethereumjs-config-tslint",
    "tslint:fix": "ethereumjs-config-tslint-fix"
  },
  "types": "dist/index.d.ts",
  "version": "4.0.3"
}
